/**
 * These rules relate to possible syntax or logic errors in JavaScript code.
 */
const errorRules = {
  'for-direction': 'error',
  'getter-return': ['error', { allowImplicit: true }],
  'no-async-promise-executor': 'error',
  'no-await-in-loop': 'error',
  'no-compare-neg-zero': 'error',
  'no-cond-assign': ['error', 'always'],
  'no-console': 'warn',
  'no-constant-condition': 'warn',
  'no-constant-binary-expression': 'error',
  'no-control-regex': 'error',
  'no-debugger': 'warn',
  'no-dupe-args': 'error',
  'no-dupe-else-if': 'off',
  'no-dupe-keys': 'error',
  'no-duplicate-case': 'error',
  'no-empty': 'error',
  'no-empty-character-class': 'error',
  'no-ex-assign': 'error',
  'no-extra-boolean-cast': 'error',
  'no-func-assign': 'error',
  'no-import-assign': 'off',
  'no-inner-declarations': ['error', 'both'],
  'no-invalid-regexp': 'error',
  'no-irregular-whitespace': 'error',
  'no-misleading-character-class': 'error',
  'no-obj-calls': 'error',
  'no-promise-executor-return': 'error',
  'no-prototype-builtins': 'error',
  'no-regex-spaces': 'error',
  'no-setter-return': 'off',
  'no-sparse-arrays': 'error',
  'no-template-curly-in-string': 'error',
  'no-unreachable': 'error',
  'no-unreachable-loop': 'error',
  'no-unsafe-finally': 'error',
  'no-unsafe-negation': 'error',
  'no-unsafe-optional-chaining': 'error',
  'no-unused-private-class-members': 'warn',
  'no-useless-backreference': 'error',
  'require-atomic-updates': 'warn',
  'use-isnan': 'error',
  'valid-typeof': ['error', { requireStringLiterals: true }],
};

export default errorRules;
